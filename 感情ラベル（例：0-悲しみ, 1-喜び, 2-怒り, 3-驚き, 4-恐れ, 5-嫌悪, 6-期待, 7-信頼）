# 必要なライブラリのインストール
!pip install transformers
!pip install torch
!pip install sentencepiece

import torch
from transformers import BertTokenizer, BertForSequenceClassification

# 日本語のBERTトークナイザーとモデルをロード
tokenizer = BertTokenizer.from_pretrained('cl-tohoku/bert-base-japanese')
model = BertForSequenceClassification.from_pretrained('cl-tohoku/bert-base-japanese', num_labels=8)

# 歌詞データ
lyrics = """
いつからか時間が止まっていた
右に左に音の波の中
これでいいかとうなづいたときに
あいつ変だと指をさされたよ
もう戻れない場所を思うときに
もう会えない人を思うときに
アンプ蹴ったらギャンギャン泣いた
１５ワットの小さな世界が
アンプを蹴りとばしたんだ
アンプを蹴りとばしたんだ
ギャンギャンないた　ギャンギャンないて
ディストーション、壁を叩いた
"""

# 感情ラベルの定義（例：0-悲しみ, 1-喜び, 2-怒り, 3-驚き, 4-恐れ, 5-嫌悪, 6-期待, 7-信頼）
emotion_labels = {
    0: "悲しみ",
    1: "喜び",
    2: "怒り",
    3: "驚き",
    4: "恐れ",
    5: "嫌悪",
    6: "期待",
    7: "信頼"
}

# 歌詞を行ごとに分割
lines = lyrics.strip().split("\n")

# 感情分析を行う関数
def analyze_sentiment(text):
    # トークナイズとエンコーディング
    inputs = tokenizer(text, return_tensors="pt", truncation=True, padding=True, max_length=128)
    
    # モデル推論
    with torch.no_grad():
        outputs = model(**inputs)
    
    # ソフトマックスでラベルを確率に変換
    probabilities = torch.nn.functional.softmax(outputs.logits, dim=-1)
    
    return probabilities

# 各行に対して感情分析を実行
for line in lines:
    probabilities = analyze_sentiment(line)
    predicted_emotion = torch.argmax(probabilities).item()
    emotion = emotion_labels[predicted_emotion]
    print(f"Line: {line}\nEmotion: {emotion}, Probabilities: {probabilities.numpy()}\n")
